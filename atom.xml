<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chankin&#39;s Blogs</title>
  
  <subtitle>-记录学习和总结过程-</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chankin026.github.io/"/>
  <updated>2018-09-28T16:00:04.364Z</updated>
  <id>https://chankin026.github.io/</id>
  
  <author>
    <name>Chankin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo-theme-indigo解决置顶问题</title>
    <link href="https://chankin026.github.io/2018/09/28/Hexo-theme-indigo%E8%A7%A3%E5%86%B3%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/"/>
    <id>https://chankin026.github.io/2018/09/28/Hexo-theme-indigo解决置顶问题/</id>
    <published>2018-09-28T15:51:29.000Z</published>
    <updated>2018-09-28T16:00:04.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-theme-indigo解决置顶问题"><a href="#Hexo-theme-indigo解决置顶问题" class="headerlink" title="Hexo-theme-indigo解决置顶问题"></a>Hexo-theme-indigo解决置顶问题</h1><p>将node_modules/hexo-generator-index/lib/generator.js的文件内容替换成一下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&apos;use strict&apos;;</span><br><span class="line">var pagination = require(&apos;hexo-pagination&apos;);</span><br><span class="line">module.exports = function(locals)&#123;</span><br><span class="line">  var config = this.config;</span><br><span class="line">  var posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">        if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">            if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">            else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">        &#125;</span><br><span class="line">        else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">            return -1;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">    &#125;);</span><br><span class="line">  var paginationDir = config.pagination_dir || &apos;page&apos;;</span><br><span class="line">  return pagination(&apos;&apos;, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&apos;index&apos;, &apos;archive&apos;],</span><br><span class="line">    format: paginationDir + &apos;/%d/&apos;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在新建的md日志文件种加入top初始化命令<br>比如说：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo置顶文章</span><br><span class="line">date: 2016-11-11 23:26:22</span><br><span class="line">tags:</span><br><span class="line">categories: Hexo</span><br><span class="line">top: 0  #0或者1</span><br></pre></td></tr></table></figure><p>当top的值取0的时候，表示默认排序，即是按照时间顺序来排序。</p><p>当top的值取1到无为置顶文件限大的时候，值最高的md文件即是置顶文章</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-theme-indigo解决置顶问题&quot;&gt;&lt;a href=&quot;#Hexo-theme-indigo解决置顶问题&quot; class=&quot;headerlink&quot; title=&quot;Hexo-theme-indigo解决置顶问题&quot;&gt;&lt;/a&gt;Hexo-theme-indigo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sql语句练习51题</title>
    <link href="https://chankin026.github.io/2018/09/28/sql%E8%AF%AD%E5%8F%A5%E7%BB%83%E4%B9%A051%E9%A2%98/"/>
    <id>https://chankin026.github.io/2018/09/28/sql语句练习51题/</id>
    <published>2018-09-28T13:13:45.000Z</published>
    <updated>2018-09-28T13:36:43.874Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp; 习题来源于网络，难度会稍高, sql语句是一部分自己写的，一部分是参考的(前23题当时没保存,直接拷贝原博)。其中有很多大神的牛逼写法,也有我自己比较差劲的写法。</p><p>源自: <a href="https://blog.csdn.net/fashion2014/article/details/78826299#commentsedit" target="_blank" rel="noopener">sql语句练习50题(Mysql版)CSDN博客</a> </p><h2 id="表名和字段"><a href="#表名和字段" class="headerlink" title="表名和字段"></a>表名和字段</h2><ol><li><p>学生表 :<br> <code>Student(s_id,s_name,s_birth,s_sex)</code>  – –学生编号,学生姓名, 出生年月,学生性别 </p></li><li><p>课程表 :<br><code>Course(c_id,c_name,t_id)</code> – –课程编号, 课程名称, 教师编号 </p></li><li><p>教师表:<br><code>Teacher(t_id,t_name)</code> – –教师编号,教师姓名 </p></li><li><p>成绩表<br><code>Score(s_id,c_id,s_score)</code> – – 学生编号,课程编号,分数</p></li></ol><h2 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">--建表</span><br><span class="line">--学生表</span><br><span class="line">CREATE TABLE `Student`(</span><br><span class="line">`s_id` VARCHAR(20),</span><br><span class="line">`s_name` VARCHAR(20) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">`s_birth` VARCHAR(20) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">`s_sex` VARCHAR(10) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">PRIMARY KEY(`s_id`)</span><br><span class="line">);</span><br><span class="line">--课程表</span><br><span class="line">CREATE TABLE `Course`(</span><br><span class="line">`c_id`  VARCHAR(20),</span><br><span class="line">`c_name` VARCHAR(20) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">`t_id` VARCHAR(20) NOT NULL,</span><br><span class="line">PRIMARY KEY(`c_id`)</span><br><span class="line">);</span><br><span class="line">--教师表</span><br><span class="line">CREATE TABLE `Teacher`(</span><br><span class="line">`t_id` VARCHAR(20),</span><br><span class="line">`t_name` VARCHAR(20) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">PRIMARY KEY(`t_id`)</span><br><span class="line">);</span><br><span class="line">--成绩表</span><br><span class="line">CREATE TABLE `Score`(</span><br><span class="line">`s_id` VARCHAR(20),</span><br><span class="line">`c_id`  VARCHAR(20),</span><br><span class="line">`s_score` INT(3),</span><br><span class="line">PRIMARY KEY(`s_id`,`c_id`)</span><br><span class="line">);</span><br><span class="line">--插入学生表测试数据</span><br><span class="line">insert into Student values(&apos;01&apos; , &apos;赵雷&apos; , &apos;1990-01-01&apos; , &apos;男&apos;);</span><br><span class="line">insert into Student values(&apos;02&apos; , &apos;钱电&apos; , &apos;1990-12-21&apos; , &apos;男&apos;);</span><br><span class="line">insert into Student values(&apos;03&apos; , &apos;孙风&apos; , &apos;1990-05-20&apos; , &apos;男&apos;);</span><br><span class="line">insert into Student values(&apos;04&apos; , &apos;李云&apos; , &apos;1990-08-06&apos; , &apos;男&apos;);</span><br><span class="line">insert into Student values(&apos;05&apos; , &apos;周梅&apos; , &apos;1991-12-01&apos; , &apos;女&apos;);</span><br><span class="line">insert into Student values(&apos;06&apos; , &apos;吴兰&apos; , &apos;1992-03-01&apos; , &apos;女&apos;);</span><br><span class="line">insert into Student values(&apos;07&apos; , &apos;郑竹&apos; , &apos;1989-07-01&apos; , &apos;女&apos;);</span><br><span class="line">insert into Student values(&apos;08&apos; , &apos;王菊&apos; , &apos;1990-01-20&apos; , &apos;女&apos;);</span><br><span class="line">--课程表测试数据</span><br><span class="line">insert into Course values(&apos;01&apos; , &apos;语文&apos; , &apos;02&apos;);</span><br><span class="line">insert into Course values(&apos;02&apos; , &apos;数学&apos; , &apos;01&apos;);</span><br><span class="line">insert into Course values(&apos;03&apos; , &apos;英语&apos; , &apos;03&apos;);</span><br><span class="line">--教师表测试数据</span><br><span class="line">insert into Teacher values(&apos;01&apos; , &apos;张三&apos;);</span><br><span class="line">insert into Teacher values(&apos;02&apos; , &apos;李四&apos;);</span><br><span class="line">insert into Teacher values(&apos;03&apos; , &apos;王五&apos;);</span><br><span class="line">--成绩表测试数据</span><br><span class="line">insert into Score values(&apos;01&apos; , &apos;01&apos; , 80);</span><br><span class="line">insert into Score values(&apos;01&apos; , &apos;02&apos; , 90);</span><br><span class="line">insert into Score values(&apos;01&apos; , &apos;03&apos; , 99);</span><br><span class="line">insert into Score values(&apos;02&apos; , &apos;01&apos; , 70);</span><br><span class="line">insert into Score values(&apos;02&apos; , &apos;02&apos; , 60);</span><br><span class="line">insert into Score values(&apos;02&apos; , &apos;03&apos; , 80);</span><br><span class="line">insert into Score values(&apos;03&apos; , &apos;01&apos; , 80);</span><br><span class="line">insert into Score values(&apos;03&apos; , &apos;02&apos; , 80);</span><br><span class="line">insert into Score values(&apos;03&apos; , &apos;03&apos; , 80);</span><br><span class="line">insert into Score values(&apos;04&apos; , &apos;01&apos; , 50);</span><br><span class="line">insert into Score values(&apos;04&apos; , &apos;02&apos; , 30);</span><br><span class="line">insert into Score values(&apos;04&apos; , &apos;03&apos; , 20);</span><br><span class="line">insert into Score values(&apos;05&apos; , &apos;01&apos; , 76);</span><br><span class="line">insert into Score values(&apos;05&apos; , &apos;02&apos; , 87);</span><br><span class="line">insert into Score values(&apos;06&apos; , &apos;01&apos; , 31);</span><br><span class="line">insert into Score values(&apos;06&apos; , &apos;03&apos; , 34);</span><br><span class="line">insert into Score values(&apos;07&apos; , &apos;02&apos; , 89);</span><br><span class="line">insert into Score values(&apos;07&apos; , &apos;03&apos; , 98);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br></pre></td><td class="code"><pre><span class="line">-- *  查询每门课程选修的同学信息</span><br><span class="line">SELECT a.*, b.c_id FROM student a RIGHT JOIN score b ON a.s_id = b.s_id WHERE b.c_id in( SELECT c.c_id FROM score c GROUP BY c.c_id HAVING count(*)) order by c_id;</span><br><span class="line"></span><br><span class="line">-- 1、查询&quot;01&quot;课程比&quot;02&quot;课程成绩高的学生的信息及课程分数  </span><br><span class="line"></span><br><span class="line">select a.* ,b.s_score as 01_score,c.s_score as 02_score from </span><br><span class="line">    student a </span><br><span class="line">    join score b on a.s_id=b.s_id and b.c_id=&apos;01&apos;</span><br><span class="line">    left join score c on a.s_id=c.s_id and c.c_id=&apos;02&apos; or c.c_id = NULL where b.s_score&gt;c.s_score</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 2、查询&quot;01&quot;课程比&quot;02&quot;课程成绩低的学生的信息及课程分数</span><br><span class="line"></span><br><span class="line">select a.* ,b.s_score as 01_score,c.s_score as 02_score from </span><br><span class="line">    student a left join score b on a.s_id=b.s_id and b.c_id=&apos;01&apos; or b.c_id=NULL </span><br><span class="line">     join score c on a.s_id=c.s_id and c.c_id=&apos;02&apos; where b.s_score&lt;c.s_score</span><br><span class="line"></span><br><span class="line">-- 3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩</span><br><span class="line"></span><br><span class="line">select b.s_id,b.s_name,ROUND(AVG(a.s_score),2) as avg_score from </span><br><span class="line">    student b </span><br><span class="line">    join score a on b.s_id = a.s_id</span><br><span class="line">    GROUP BY b.s_id,b.s_name HAVING ROUND(AVG(a.s_score),2)&gt;=60;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩</span><br><span class="line">        -- (包括有成绩的和无成绩的)</span><br><span class="line"></span><br><span class="line">select b.s_id,b.s_name,ROUND(AVG(a.s_score),2) as avg_score from </span><br><span class="line">    student b </span><br><span class="line">    left join score a on b.s_id = a.s_id</span><br><span class="line">    GROUP BY b.s_id,b.s_name HAVING ROUND(AVG(a.s_score),2)&lt;60</span><br><span class="line">    union</span><br><span class="line">select a.s_id,a.s_name,0 as avg_score from </span><br><span class="line">    student a </span><br><span class="line">    where a.s_id not in (</span><br><span class="line">                select distinct s_id from score);</span><br><span class="line"></span><br><span class="line">-- 5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩</span><br><span class="line">select a.s_id,a.s_name,count(b.c_id) as sum_course,sum(b.s_score) as sum_score from </span><br><span class="line">    student a </span><br><span class="line">    left join score b on a.s_id=b.s_id</span><br><span class="line">    GROUP BY a.s_id,a.s_name;</span><br><span class="line"></span><br><span class="line">-- 6、查询&quot;李&quot;姓老师的数量 </span><br><span class="line">select count(t_id) from teacher where t_name like &apos;李%&apos;;</span><br><span class="line"></span><br><span class="line">-- 7、查询学过&quot;张三&quot;老师授课的同学的信息 </span><br><span class="line">select a.* from </span><br><span class="line">    student a </span><br><span class="line">    join score b on a.s_id=b.s_id where b.c_id in(</span><br><span class="line">        select c_id from course where t_id =(</span><br><span class="line">            select t_id from teacher where t_name = &apos;张三&apos;));</span><br><span class="line"></span><br><span class="line">-- 8、查询没学过&quot;张三&quot;老师授课的同学的信息 </span><br><span class="line">select * from </span><br><span class="line">    student c </span><br><span class="line">    where c.s_id not in(</span><br><span class="line">        select a.s_id from student a join score b on a.s_id=b.s_id where b.c_id in(</span><br><span class="line">            select c_id from course where t_id =(</span><br><span class="line">                select t_id from teacher where t_name = &apos;张三&apos;)))</span><br><span class="line"></span><br><span class="line">-- 9、查询学过编号为&quot;01&quot;并且也学过编号为&quot;02&quot;的课程的同学的信息</span><br><span class="line"></span><br><span class="line">select a.* from </span><br><span class="line">    student a,score b,score c </span><br><span class="line">    where a.s_id = b.s_id  and a.s_id = c.s_id and b.c_id=&apos;01&apos; and c.c_id=&apos;02&apos;;</span><br><span class="line"></span><br><span class="line">-- 10、查询学过编号为&quot;01&quot;但是没有学过编号为&quot;02&quot;的课程的同学的信息</span><br><span class="line"></span><br><span class="line">select a.* from </span><br><span class="line">    student a </span><br><span class="line">    where a.s_id in (select s_id from score where c_id=&apos;01&apos; ) and a.s_id not in(select s_id from score where c_id=&apos;02&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 11、查询没有学全所有课程的同学的信息 </span><br><span class="line"></span><br><span class="line">    --第一种</span><br><span class="line">    select s.* from </span><br><span class="line">    student s where s.s_id in(</span><br><span class="line">        select s_id from score where s_id not in(</span><br><span class="line">            select a.s_id from score a </span><br><span class="line">                join score b on a.s_id = b.s_id and b.c_id=&apos;02&apos;</span><br><span class="line">                join score c on a.s_id = c.s_id and c.c_id=&apos;03&apos;</span><br><span class="line">            where a.c_id=&apos;01&apos;))</span><br><span class="line"></span><br><span class="line">    --第二种</span><br><span class="line">    SELECT a.* FROM student a </span><br><span class="line">        RIGHT JOIN (SELECT s_id, count(*) FROM score  </span><br><span class="line">        GROUP BY s_id HAVING count(c_id) &lt; (SELECT count(*) FROM course)) AS b ON a.s_id = b.s_id  </span><br><span class="line"></span><br><span class="line">-- 12、查询至少有一门课与学号为&quot;01&quot;的同学所学相同的同学的信息 </span><br><span class="line"></span><br><span class="line">select * from student where s_id in(</span><br><span class="line">    select distinct a.s_id from score a where a.c_id in(select a.c_id from score a where a.s_id=&apos;01&apos;)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">-- 13、查询和&quot;01&quot;号的同学学习的课程完全相同的其他同学的信息 </span><br><span class="line"></span><br><span class="line">select a.* from student a where a.s_id in(</span><br><span class="line">    select distinct s_id from score where s_id!=&apos;01&apos; and c_id in(select c_id from score where s_id=&apos;01&apos;)</span><br><span class="line">    group by s_id </span><br><span class="line">    having count(1)=(select count(1) from score where s_id=&apos;01&apos;));</span><br><span class="line"></span><br><span class="line">-- 14、查询没学过&quot;张三&quot;老师讲授的任一门课程的学生姓名 </span><br><span class="line"></span><br><span class="line">select a.s_name from student a where a.s_id not in (</span><br><span class="line">    select s_id from score where c_id = </span><br><span class="line">                (select c_id from course where t_id =(</span><br><span class="line">                    select t_id from teacher where t_name = &apos;张三&apos;)) </span><br><span class="line">                group by s_id);</span><br><span class="line"></span><br><span class="line">-- 15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 </span><br><span class="line"></span><br><span class="line">select a.s_id,a.s_name,ROUND(AVG(b.s_score)) from </span><br><span class="line">    student a </span><br><span class="line">    left join score b on a.s_id = b.s_id</span><br><span class="line">    where a.s_id in(</span><br><span class="line">            select s_id from score where s_score&lt;60 GROUP BY  s_id having count(1)&gt;=2)</span><br><span class="line">    GROUP BY a.s_id,a.s_name</span><br><span class="line"></span><br><span class="line">-- 16、检索&quot;01&quot;课程分数小于60，按分数降序排列的学生信息</span><br><span class="line"></span><br><span class="line">select a.*,b.c_id,b.s_score from </span><br><span class="line">    student a,score b </span><br><span class="line">    where a.s_id = b.s_id and b.c_id=&apos;01&apos; and b.s_score&lt;60 ORDER BY b.s_score DESC;</span><br><span class="line"></span><br><span class="line">-- 17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩</span><br><span class="line"></span><br><span class="line">select a.s_id,(select s_score from score where s_id=a.s_id and c_id=&apos;01&apos;) as 语文,</span><br><span class="line">                (select s_score from score where s_id=a.s_id and c_id=&apos;02&apos;) as 数学,</span><br><span class="line">                (select s_score from score where s_id=a.s_id and c_id=&apos;03&apos;) as 英语,</span><br><span class="line">            round(avg(s_score),2) as 平均分 from score a  GROUP BY a.s_id ORDER BY 平均分 DESC;</span><br><span class="line"></span><br><span class="line">-- 18.查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率</span><br><span class="line">--及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90</span><br><span class="line"></span><br><span class="line">select a.c_id,b.c_name,MAX(s_score),MIN(s_score),ROUND(AVG(s_score),2),</span><br><span class="line">    ROUND(100*(SUM(case when a.s_score&gt;=60 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 及格率,</span><br><span class="line">    ROUND(100*(SUM(case when a.s_score&gt;=70 and a.s_score&lt;=80 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 中等率,</span><br><span class="line">    ROUND(100*(SUM(case when a.s_score&gt;=80 and a.s_score&lt;=90 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 优良率,</span><br><span class="line">    ROUND(100*(SUM(case when a.s_score&gt;=90 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 优秀率</span><br><span class="line">    from score a left join course b on a.c_id = b.c_id GROUP BY a.c_id,b.c_name</span><br><span class="line"></span><br><span class="line">-- 19、按各科成绩进行排序，并显示排名(实现不完全)</span><br><span class="line">-- mysql没有rank函数</span><br><span class="line">    select a.s_id,a.c_id,</span><br><span class="line">        @i:=@i +1 as i保留排名,</span><br><span class="line">        @k:=(case when @score=a.s_score then @k else @i end) as rank不保留排名,</span><br><span class="line">        @score:=a.s_score as score</span><br><span class="line">    from (</span><br><span class="line">        select s_id,c_id,s_score from score WHERE c_id=&apos;01&apos; GROUP BY s_id,c_id,s_score ORDER BY s_score DESC</span><br><span class="line">)a,(select @k:=0,@i:=0,@score:=0)s</span><br><span class="line">    union</span><br><span class="line">    select a.s_id,a.c_id,</span><br><span class="line">        @i:=@i +1 as i,</span><br><span class="line">        @k:=(case when @score=a.s_score then @k else @i end) as rank,</span><br><span class="line">        @score:=a.s_score as score</span><br><span class="line">    from (</span><br><span class="line">        select s_id,c_id,s_score from score WHERE c_id=&apos;02&apos; GROUP BY s_id,c_id,s_score ORDER BY s_score DESC</span><br><span class="line">)a,(select @k:=0,@i:=0,@score:=0)s</span><br><span class="line">    union</span><br><span class="line">    select a.s_id,a.c_id,</span><br><span class="line">        @i:=@i +1 as i,</span><br><span class="line">        @k:=(case when @score=a.s_score then @k else @i end) as rank,</span><br><span class="line">        @score:=a.s_score as score</span><br><span class="line">    from (</span><br><span class="line">        select s_id,c_id,s_score from score WHERE c_id=&apos;03&apos; GROUP BY s_id,c_id,s_score ORDER BY s_score DESC</span><br><span class="line">)a,(select @k:=0,@i:=0,@score:=0)s</span><br><span class="line"></span><br><span class="line">-- 20、查询学生的总成绩并进行排名</span><br><span class="line">        select a.s_id,</span><br><span class="line">            @i:=@i+1 as i,</span><br><span class="line">            @k:=(case when @score=a.sum_score then @k else @i end) as rank, @score:=a.sum_score as score</span><br><span class="line">        from (select s_id,SUM(s_score) as sum_score from score GROUP BY s_id ORDER BY sum_score DESC)a,</span><br><span class="line">    (select @k:=0,@i:=0,@score:=0)s</span><br><span class="line"></span><br><span class="line">-- 21、查询不同老师所教不同课程平均分从高到低显示 </span><br><span class="line"></span><br><span class="line">    select a.t_id,c.t_name,a.c_id,ROUND(avg(s_score),2) as avg_score from course a</span><br><span class="line">        left join score b on a.c_id=b.c_id </span><br><span class="line">        left join teacher c on a.t_id=c.t_id</span><br><span class="line">        GROUP BY a.c_id,a.t_id,c.t_name ORDER BY avg_score DESC;</span><br><span class="line"></span><br><span class="line">-- 22、查询所有课程的成绩第2名到第3名的学生信息及该课程成绩</span><br><span class="line"></span><br><span class="line">            select d.*,c.排名,c.s_score,c.c_id from (</span><br><span class="line">                select a.s_id,a.s_score,a.c_id,@i:=@i+1 as 排名 from score a,(select @i:=0)s where a.c_id=&apos;01&apos;    </span><br><span class="line">            )c</span><br><span class="line">            left join student d on c.s_id=d.s_id</span><br><span class="line">            where 排名 BETWEEN 2 AND 3</span><br><span class="line">            UNION</span><br><span class="line">            select d.*,c.排名,c.s_score,c.c_id from (</span><br><span class="line">                select a.s_id,a.s_score,a.c_id,@j:=@j+1 as 排名 from score a,(select @j:=0)s where a.c_id=&apos;02&apos;    </span><br><span class="line">            )c</span><br><span class="line">            left join student d on c.s_id=d.s_id</span><br><span class="line">            where 排名 BETWEEN 2 AND 3</span><br><span class="line">            UNION</span><br><span class="line">            select d.*,c.排名,c.s_score,c.c_id from (</span><br><span class="line">                select a.s_id,a.s_score,a.c_id,@k:=@k+1 as 排名 from score a,(select @k:=0)s where a.c_id=&apos;03&apos;    </span><br><span class="line">            )c</span><br><span class="line">            left join student d on c.s_id=d.s_id</span><br><span class="line">            where 排名 BETWEEN 2 AND 3;</span><br><span class="line">            </span><br><span class="line">-- 23、统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]及所占百分比 </span><br><span class="line"></span><br><span class="line">select distinct f.c_name,a.c_id,b.`85-100`,b.百分比,c.`70-85`,c.百分比,d.`60-70`,d.百分比,e.`0-60`,e.百分比 from score a </span><br><span class="line">LEFT JOIN (select c_id,sum(case when s_score &gt; 85 and s_score &lt;= 100 then 1 else 0 end) as `85-100`,</span><br><span class="line">100*(sum(case when s_score &gt; 85 and s_score &lt;= 100 then 1 else 0 end)/count(*))as 百分比 </span><br><span class="line">from score group by c_id) b on a.c_id = b.c_id</span><br><span class="line">LEFT JOIN (select c_id,sum(case when s_score &gt; 70 and s_score &lt;= 85 then 1 else 0 end) as `70-85`,</span><br><span class="line">100*(sum(case when s_score &gt; 70 and s_score &lt;= 85 then 1 else 0 end)/count(*))as 百分比 </span><br><span class="line">from score group by c_id) c on a.c_id = c.c_id</span><br><span class="line">LEFT JOIN (select c_id,sum(case when s_score &gt; 60 and s_score &lt;= 70 then 1 else 0 end) as `60-70`,</span><br><span class="line">100*(sum(case when s_score &gt; 60 and s_score &lt;= 70 then 1 else 0 end)/count(*))as 百分比 </span><br><span class="line">from score group by c_id) d on a.c_id = d.c_id</span><br><span class="line">LEFT JOIN (select c_id,sum(case when s_score &gt; 0 and s_score &lt;= 60 then 1 else 0 end) as `0-60`,</span><br><span class="line">100*(sum(case when s_score &gt; 0 and s_score &lt;= 60 then 1 else 0 end)/count(*))as 百分比 </span><br><span class="line">from score group by c_id) e on a.c_id = e.c_id</span><br><span class="line">left join course f on a.c_id = f.c_id</span><br><span class="line"></span><br><span class="line">-- 24、查询学生平均成绩及其名次 </span><br><span class="line"></span><br><span class="line">    SELECT</span><br><span class="line">        a.s_id ,</span><br><span class="line">        @i :=@i+ 1 AS 名次 ,</span><br><span class="line">        @k := avg_s AS 平均分 FROM (SELECT s_id, avg(s_score) AS avg_s </span><br><span class="line">    FROM score GROUP BY s_id) a, (SELECT @k := 0 ,@i := 0) b order by 平均分 desc</span><br><span class="line">        </span><br><span class="line">-- 25、查询各科成绩前三名的记录</span><br><span class="line">            -- 1.选出b表比a表成绩大的所有组</span><br><span class="line">            -- 2.选出比当前id成绩大的 小于三个的</span><br><span class="line"></span><br><span class="line">        SELECT DISTINCT a.s_id, a.c_id,a.s_score FROM score a </span><br><span class="line">            LEFT JOIN score b ON a.c_id = b.c_id AND a.s_score &lt; b.s_score </span><br><span class="line">                GROUP BY a.s_id, a.c_id, a.s_score </span><br><span class="line">            HAVING COUNT(a.s_id) &lt; 3 ORDER BY a.c_id,a.s_score DESC</span><br><span class="line"></span><br><span class="line">-- 26、查询每门课程被选修的学生数 </span><br><span class="line"></span><br><span class="line">        select c_id,count(c_id) from score group by c_id </span><br><span class="line"></span><br><span class="line">-- 27、查询出只有两门课程的全部学生的学号和姓名 </span><br><span class="line"></span><br><span class="line">        select s_id,s_name from student </span><br><span class="line">        where s_id in (select s_id from score group by s_id having count(c_id) = 2)</span><br><span class="line"></span><br><span class="line">-- 28、查询男生、女生人数 </span><br><span class="line"></span><br><span class="line">        select s_sex,COUNT(s_sex) as 人数  from student GROUP BY s_sex</span><br><span class="line"></span><br><span class="line">-- 29、查询名字中含有&quot;风&quot;字的学生信息</span><br><span class="line"></span><br><span class="line">        select * from student where s_name like &apos;%风%&apos;</span><br><span class="line"></span><br><span class="line">-- 30、查询同名同性学生名单，并统计同名人数 </span><br><span class="line"></span><br><span class="line">        select a.s_name,a.s_sex,count(*) from student a  JOIN </span><br><span class="line">                    student b on a.s_id !=b.s_id and a.s_name = b.s_name and a.s_sex = b.s_sex</span><br><span class="line">        GROUP BY a.s_name,a.s_sex</span><br><span class="line"></span><br><span class="line">-- 31、查询1990年出生的学生名单</span><br><span class="line"></span><br><span class="line">        select s_name from student where s_birth like &apos;1990%&apos;</span><br><span class="line"></span><br><span class="line">-- 32、查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列 </span><br><span class="line"></span><br><span class="line">        select c_id,avg(s_score) as 平均成绩 from score </span><br><span class="line">            group by c_id order by 平均成绩 desc,c_id asc</span><br><span class="line"></span><br><span class="line">-- 33、查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩 </span><br><span class="line"></span><br><span class="line">   SELECT A.S_ID,A.S_NAME,AVG(B.S_SCORE) AS 平均成绩 </span><br><span class="line">        FROM STUDENT A </span><br><span class="line">            LEFT JOIN SCORE B ON A.S_ID =B.S_ID </span><br><span class="line">            GROUP BY S_ID HAVING AVG(B.S_SCORE)&gt;=85</span><br><span class="line"></span><br><span class="line">-- 34、查询课程名称为&quot;数学&quot;，且分数低于60的学生姓名和分数 </span><br><span class="line"></span><br><span class="line">        select a.s_name,b.s_score from student a left join score b on a.s_id = b.s_id  where b.s_score &lt; 60 group by a.s_id</span><br><span class="line">        </span><br><span class="line">-- 可能会出现 [Err] 1055 的错误 只需在my.ini中[mysqld]加入</span><br><span class="line">sql_mode=&apos;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&apos;</span><br><span class="line"></span><br><span class="line">-- 35、查询所有学生的课程及分数情况</span><br><span class="line"></span><br><span class="line">        --第一种不直观</span><br><span class="line">        SELECT a.s_id,b.c_id,a.s_score FROM score a LEFT JOIN course b on a.c_id =b.c_id</span><br><span class="line"></span><br><span class="line">        select a.s_id,a.s_name,</span><br><span class="line">            SUM(case c.c_name when &apos;语文&apos; then b.s_score else 0 end) as &apos;语文&apos;,</span><br><span class="line">            SUM(case c.c_name when &apos;数学&apos; then b.s_score else 0 end) as &apos;数学&apos;,</span><br><span class="line">            SUM(case c.c_name when &apos;英语&apos; then b.s_score else 0 end) as &apos;英语&apos;,</span><br><span class="line">            SUM(b.s_score) as  &apos;总分&apos;</span><br><span class="line">        from student a left join score b on a.s_id = b.s_id </span><br><span class="line">        left join course c on b.c_id = c.c_id </span><br><span class="line">        GROUP BY a.s_id,a.s_name</span><br><span class="line"></span><br><span class="line"> -- 36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数</span><br><span class="line"></span><br><span class="line">           select a.s_name,c.c_name,b.s_score from student a </span><br><span class="line">           left join score b on a.s_id =b.s_id </span><br><span class="line">           left join course c on b.c_id =c.c_id </span><br><span class="line">           where b.s_score &gt; 70</span><br><span class="line"></span><br><span class="line">-- 37、查询不及格的课程</span><br><span class="line"></span><br><span class="line">        select a.s_id,a.c_id,b.c_name,a.s_score from score a </span><br><span class="line">        left join course b on a.c_id = b.c_id</span><br><span class="line">        where a.s_score&lt;60 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--38、查询课程编号为01且课程成绩在80分以上的学生的学号和姓名</span><br><span class="line"></span><br><span class="line">        select s_id,s_name from student where s_id in (select s_id from score where c_id =&apos;01&apos; and s_score &gt; 80 ) </span><br><span class="line"></span><br><span class="line">-- 39、求每门课程的学生人数 </span><br><span class="line"></span><br><span class="line">        select c_id,count(c_id) from score group by c_id</span><br><span class="line"></span><br><span class="line">-- 40、查询选修&quot;张三&quot;老师所授课程的学生中，成绩最高的学生信息及其成绩</span><br><span class="line"></span><br><span class="line">        select a.*,b.s_score,b.c_id,c.c_name from student a</span><br><span class="line">            LEFT JOIN score b on a.s_id = b.s_id</span><br><span class="line">            LEFT JOIN course c on b.c_id=c.c_id</span><br><span class="line">            where b.c_id =(select c_id from course c,teacher d where c.t_id=d.t_id and d.t_name=&apos;张三&apos;)</span><br><span class="line">            and b.s_score = (select MAX(s_score) </span><br><span class="line">            from score where c_id=(select c_id from course c,teacher d where c.t_id=d.t_id and d.t_name=&apos;张三&apos;))</span><br><span class="line"></span><br><span class="line">-- 41、查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩 </span><br><span class="line"></span><br><span class="line">        --第一种</span><br><span class="line">         SELECT * FROM score a WHERE (SELECT count(*) FROM score b WHERE b.c_id = a.c_id</span><br><span class="line">            AND b.s_score &gt; a.s_score) &lt;= 1</span><br><span class="line"></span><br><span class="line">        --第二种</span><br><span class="line">         select a.s_id,a.c_id,a.s_score from score a where (select COUNT(1) from score b where b.c_id=a.c_id and b.s_score&gt;=a.s_score)&lt;=2 ORDER BY a.c_id</span><br><span class="line"></span><br><span class="line">-- 42、查询每门功成绩最好的前两名 </span><br><span class="line"></span><br><span class="line">        -- 牛逼的写法</span><br><span class="line">    select a.s_id,a.c_id,a.s_score from score a</span><br><span class="line">        where (select COUNT(1) from score b where b.c_id=a.c_id and b.s_score&gt;=a.s_score)&lt;=2 ORDER BY a.c_id</span><br><span class="line"></span><br><span class="line">-- 43、统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列  </span><br><span class="line"></span><br><span class="line">        select c_id,count(*) as total from score GROUP BY c_id HAVING total&gt;5 ORDER BY total,c_id ASC</span><br><span class="line"></span><br><span class="line">-- 44、检索至少选修两门课程的学生学号 </span><br><span class="line"></span><br><span class="line">        select s_id from score  group by s_id having count(s_id) &gt;1</span><br><span class="line"></span><br><span class="line">-- 45、查询选修了全部课程的学生信息 </span><br><span class="line"></span><br><span class="line">        select * from student where s_id in (select s_id from score group by s_id having count(*) =(select count(*) from course))</span><br><span class="line"></span><br><span class="line">--46、查询各学生的年龄</span><br><span class="line">    -- 按照出生日期来算，当前月日 &lt; 出生年月的月日则，年龄减一</span><br><span class="line"></span><br><span class="line">    select s_birth,(DATE_FORMAT(NOW(),&apos;%Y&apos;)-DATE_FORMAT(s_birth,&apos;%Y&apos;) - </span><br><span class="line">                (case when DATE_FORMAT(NOW(),&apos;%m%d&apos;)&gt;DATE_FORMAT(s_birth,&apos;%m%d&apos;) then 0 else 1 end)) as age</span><br><span class="line">        from student;</span><br><span class="line"></span><br><span class="line">-- 47、查询本周过生日的学生</span><br><span class="line"></span><br><span class="line">    select * from student where WEEK(DATE_FORMAT(NOW(),&apos;%Y%m%d&apos;))=WEEK(s_birth)</span><br><span class="line">    select * from student where YEARWEEK(s_birth)=YEARWEEK(DATE_FORMAT(NOW(),&apos;%Y%m%d&apos;))</span><br><span class="line"></span><br><span class="line">    select WEEK(DATE_FORMAT(NOW(),&apos;%Y%m%d&apos;))</span><br><span class="line"></span><br><span class="line">-- 48、查询下周过生日的学生</span><br><span class="line"></span><br><span class="line">    select * from student where WEEK(DATE_FORMAT(NOW(),&apos;%Y%m%d&apos;))+1 =WEEK(s_birth)</span><br><span class="line"></span><br><span class="line">-- 49、查询本月过生日的学生</span><br><span class="line"></span><br><span class="line">    select * from student where MONTH(DATE_FORMAT(NOW(),&apos;%Y%m%d&apos;)) =MONTH(s_birth)</span><br><span class="line"></span><br><span class="line">-- 50、查询下月过生日的学生</span><br><span class="line"></span><br><span class="line">    select * from student where MONTH(DATE_FORMAT(NOW(),&apos;%Y%m%d&apos;))+1 =MONTH(s_birth)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&amp;emsp;&amp;emsp; 习题来源于网络，难度会稍高, sql语句是一部分自己写的，一部分是参考的(前23题当时没保存,直接拷贝原博)。其中有很多大神的牛逼写法,也有我自己比较差劲的写法。&lt;/p&gt;
&lt;p&gt;源自: &lt;a href=&quot;https://blog.csdn.net/
      
    
    </summary>
    
      <category term="Mysql" scheme="https://chankin026.github.io/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="https://chankin026.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>整理一些学习过的数据结构和算法blog</title>
    <link href="https://chankin026.github.io/2018/09/28/%E6%95%B4%E7%90%86%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95blog/"/>
    <id>https://chankin026.github.io/2018/09/28/整理一些学习过的数据结构和算法blog/</id>
    <published>2018-09-28T03:39:39.000Z</published>
    <updated>2018-09-28T15:59:45.879Z</updated>
    
    <content type="html"><![CDATA[<h2 id="树形结构"><a href="#树形结构" class="headerlink" title="树形结构:"></a><strong>树形结构</strong>:</h2><p><a href="http://www.cnblogs.com/skywang12345/p/3576452.html" target="_blank" rel="noopener">二叉查找树</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3576452.html" target="_blank" rel="noopener">二叉查找树之 Java的实现</a></p><p><a href="https://www.cnblogs.com/Michaelwjw/p/6384428.html" target="_blank" rel="noopener">二叉搜索树Java实现（查找、插入、删除、遍历） - Michaelwjw - 博客园</a></p><p><br></p><p><a href="https://blog.csdn.net/javazejian/article/details/53892797" target="_blank" rel="noopener">AVL树的设计与实现 - CSDN博客</a></p><p><a href="https://www.jianshu.com/p/65c90aa1236d" target="_blank" rel="noopener">彻底搞懂AVL树 - 简书</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3577479.html#a1" target="_blank" rel="noopener">AVL树(三)之 Java的实现 - 如果天空不死 - 博客园</a></p><p><br></p><p><a href="https://www.cnblogs.com/skywang12345/p/3245399.html" target="_blank" rel="noopener">红黑树(一)之 原理和算法详细介绍</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3624343.html" target="_blank" rel="noopener">红黑树(五)之 Java的实现</a></p><p><a href="https://blog.csdn.net/yang_yulei/article/details/26066409" target="_blank" rel="noopener">查找（一）史上最简单清晰的红黑树讲解 - CSDN博客</a></p><p><a href="https://blog.csdn.net/Sun_TTTT/article/details/65445754" target="_blank" rel="noopener">!最容易懂得红黑树 - CSDN博客</a></p><p><a href="https://blog.csdn.net/yang_yulei/article/details/26066409" target="_blank" rel="noopener">查找（一）史上最简单清晰的红黑树讲解 - CSDN博客</a></p><p><br></p><p><a href="http://www.cnblogs.com/gaochundong/p/balanced_search_tree.htm" target="_blank" rel="noopener">查找树（2-3-4 树） - 匠心十年- 博客园</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3711483.html" target="_blank" rel="noopener">图的遍历之 深度优先搜索和广度优先搜索</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3706833.html" target="_blank" rel="noopener">哈夫曼树(三)之 Java详解</a></p><p><a href="https://blog.csdn.net/v_JULY_v/article/details/6530142" target="_blank" rel="noopener">从B树、B+树、B*树谈到R 树</a></p><p><a href="http://blog.csdn.net/hackbuteer1/article/details/7964147" target="_blank" rel="noopener">Trie树详解及其应用</a> </p><p><br></p><p><a href="https://www.zhihu.com/question/20176446" target="_blank" rel="noopener">数据结构与算法中，树一般会应用在哪些方面？为什么？ - 知乎</a></p><p><br></p><h2 id="算法系列"><a href="#算法系列" class="headerlink" title="算法系列:"></a><strong>算法系列</strong>:</h2><h4 id="8大排序"><a href="#8大排序" class="headerlink" title="8大排序:"></a>8大排序:</h4><p><a href="http://www.cnblogs.com/skywang12345/p/3596232.html" target="_blank" rel="noopener">冒泡排序</a>   <a href="http://www.cnblogs.com/skywang12345/p/3596746.html" target="_blank" rel="noopener">快速排序</a>   <a href="http://www.cnblogs.com/skywang12345/p/3596881.html" target="_blank" rel="noopener">直接插入排序</a>   <a href="http://www.cnblogs.com/skywang12345/p/3597597.html" target="_blank" rel="noopener">希尔排序</a>  <a href="http://www.cnblogs.com/skywang12345/p/3597641.html" target="_blank" rel="noopener">选择排序</a>   <a href="http://www.cnblogs.com/skywang12345/p/3602162.html" target="_blank" rel="noopener">堆排序</a>   <a href="http://www.cnblogs.com/skywang12345/p/3602737.html" target="_blank" rel="noopener">桶排序</a>   <a href="http://www.cnblogs.com/skywang12345/p/3603669.html" target="_blank" rel="noopener">基数排序</a></p><h4 id="其他基础算法"><a href="#其他基础算法" class="headerlink" title="其他基础算法:"></a>其他基础算法:</h4><p><a href="https://blog.csdn.net/bruce_suxin/article/details/52937720" target="_blank" rel="noopener">递归之斐波那契数列java的三种写法- CSDN博客</a></p><p><a href="https://www.cnblogs.com/newflydd/p/5091646.html" target="_blank" rel="noopener">8皇后以及N皇后算法探究，回溯算法的JAVA实现，递归方案</a></p><p><a href="https://blog.csdn.net/m53931422/article/details/41788535" target="_blank" rel="noopener">分治归并排序算法——Java实现- CSDN博客</a></p><p><a href="https://www.cnblogs.com/xiaozhang2014/p/7783795.html" target="_blank" rel="noopener">java-贪心算法</a></p><p><a href="https://www.cnblogs.com/yanlingyin/archive/2011/11/16/greedy.html" target="_blank" rel="noopener">【贪心法求解最小生成树之Kruskal算法详细分析】—Greedy Algorithm for MST</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3711510.html" target="_blank" rel="noopener">Prim算法(三)之 Java详解</a></p><p><a href="https://www.cnblogs.com/skywang12345/p/3711516.html" target="_blank" rel="noopener">Dijkstra算法(三)之Java详解- 如果天空不死- 博客园</a></p><p><br></p><h2 id="并发编程"><a href="#并发编程" class="headerlink" title="并发编程:"></a><strong>并发编程</strong>:</h2><h3 id="海子大神系列"><a href="#海子大神系列" class="headerlink" title="海子大神系列:"></a><a href="https://www.cnblogs.com/dolphin0520" target="_blank" rel="noopener"><strong>海子大神系列</strong></a>:</h3><ol><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3910667.html" target="_blank" rel="noopener">Java并发编程：进程和线程之由来</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3913517.html" target="_blank" rel="noopener">Java并发编程：如何创建线程？</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3920357.html" target="_blank" rel="noopener">Java并发编程：Thread类的使用</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3920385.html" target="_blank" rel="noopener">Java并发编程：线程间协作的两种方式：wait、notify、notifyAll和Condition</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3923737.html" target="_blank" rel="noopener">Java并发编程：synchronized</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3923167.html" target="_blank" rel="noopener">Java并发编程：Lock</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3920373.html" target="_blank" rel="noopener">Java并发编程：volatile关键字解析</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3920407.html" target="_blank" rel="noopener">Java并发编程：深入剖析ThreadLocal</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3933404.html" target="_blank" rel="noopener">Java并发编程：同步容器</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3933551.html" target="_blank" rel="noopener">Java ConcurrentModificationException异常原因和解决方法</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3932905.html" target="_blank" rel="noopener">Java并发编程：并发容器之ConcurrentHashMap（转载）</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3938914.html" target="_blank" rel="noopener">Java并发编程：并发容器之CopyOnWriteArrayList（转载）</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3932906.html" target="_blank" rel="noopener">Java并发编程：阻塞队列</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3932921.html" target="_blank" rel="noopener">Java并发编程：线程池的使用</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3920397.html" target="_blank" rel="noopener">Java并发编程：CountDownLatch、CyclicBarrier和Semaphore</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3949310.html" target="_blank" rel="noopener">Java并发编程：Callable、Future和FutureTask</a></p></li><li><p><a href="https://www.cnblogs.com/dolphin0520/p/3938991.html" target="_blank" rel="noopener">Java并发编程：Timer和TimerTask（转载）</a></p><p><br></p></li></ol><h3 id="skywang大神系列"><a href="#skywang大神系列" class="headerlink" title="skywang大神系列:"></a><a href="https://www.cnblogs.com/skywang12345" target="_blank" rel="noopener"><strong>skywang大神系列</strong></a>:</h3><h4 id="一-基础篇"><a href="#一-基础篇" class="headerlink" title="(一) 基础篇"></a><strong>(一) 基础篇</strong></h4><ol><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479024.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”01之 基本概念</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479063.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”02之 常用的实现多线程的两种方式</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479083.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”03之 Thread中start()和run()的区别</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479202.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”04之 synchronized关键字</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479224.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”05之 线程等待与唤醒</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479243.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”06之 线程让步</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479256.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”07之 线程休眠</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479275.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”08之 join()</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479949.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”09之 interrupt()和线程终止方式</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3479982.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”10之 线程优先级和守护线程</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3480016.html" target="_blank" rel="noopener">Java多线程系列–“基础篇”11之 生产消费者问题</a></p></li></ol><h4 id="二-JUC原子类"><a href="#二-JUC原子类" class="headerlink" title="(二) JUC原子类"></a><strong>(二) JUC原子类</strong></h4><ol start="12"><li><p><a href="http://www.cnblogs.com/skywang12345/p/3514589.html" target="_blank" rel="noopener">Java多线程系列–“JUC原子类”01之 框架</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3514593.html" target="_blank" rel="noopener">Java多线程系列–“JUC原子类”02之 AtomicLong原子类</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3514604.html" target="_blank" rel="noopener">Java多线程系列–“JUC原子类”03之 AtomicLongArray原子类</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3514623.html" target="_blank" rel="noopener">Java多线程系列–“JUC原子类”04之 AtomicReference原子类</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3514635.html" target="_blank" rel="noopener">Java多线程系列–“JUC原子类”05之 AtomicLongFieldUpdater原子类</a></p></li></ol><h4 id="三-JUC锁"><a href="#三-JUC锁" class="headerlink" title="(三) JUC锁"></a><strong>(三) JUC锁</strong></h4><ol start="17"><li><p><a href="http://www.cnblogs.com/skywang12345/p/3496098.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”01之 框架</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3496101.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”02之 互斥锁ReentrantLock</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3496147.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”03之 公平锁(一)</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3496609.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”04之 公平锁(二)</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3496651.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”05之 非公平锁</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3496716.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”06之 Condition条件</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3505784.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”07之 LockSupport</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3505809.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”08之 共享锁和ReentrantReadWriteLock</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3533887.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”09之 CountDownLatch原理和示例</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3533995.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”10之 CyclicBarrier原理和示例</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3534050.html" target="_blank" rel="noopener">Java多线程系列–“JUC锁”11之 Semaphore信号量的原理和示例</a> </p></li></ol><h4 id="四-JUC集合"><a href="#四-JUC集合" class="headerlink" title="(四) JUC集合"></a><strong>(四) JUC集合</strong></h4><ol start="28"><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498454.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”01之 框架</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498483.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”02之 CopyOnWriteArrayList</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498497.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”03之 CopyOnWriteArraySet</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498537.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”04之 ConcurrentHashMap</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498556.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”05之 ConcurrentSkipListMap</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498634.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”06之 ConcurrentSkipListSet</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498652.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”07之 ArrayBlockingQueue</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3503458.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”08之 LinkedBlockingQueue</a> </p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3503480.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”09之 LinkedBlockingDeque</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3498995.html" target="_blank" rel="noopener">Java多线程系列–“JUC集合”10之 ConcurrentLinkedQueue</a></p></li></ol><h4 id="五-JUC线程池"><a href="#五-JUC线程池" class="headerlink" title="(五) JUC线程池"></a><strong>(五) JUC线程池</strong></h4><ol start="38"><li><p><a href="http://www.cnblogs.com/skywang12345/p/3509903.html" target="_blank" rel="noopener">Java多线程系列–“JUC线程池”01之 线程池架构</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3509941.html" target="_blank" rel="noopener">Java多线程系列–“JUC线程池”02之 线程池原理(一)</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3509954.html" target="_blank" rel="noopener">Java多线程系列–“JUC线程池”03之 线程池原理(二)</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3509960.html" target="_blank" rel="noopener">Java多线程系列–“JUC线程池”04之 线程池原理(三)</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3512947.html" target="_blank" rel="noopener">Java多线程系列–“JUC线程池”05之 线程池原理(四)</a></p></li><li><p><a href="http://www.cnblogs.com/skywang12345/p/3544116.html" target="_blank" rel="noopener">Java多线程系列–“JUC线程池”06之 Callable和Future</a></p></li></ol><h5 id="附加内容"><a href="#附加内容" class="headerlink" title="附加内容"></a><strong>附加内容</strong></h5><p><a href="http://www.cnblogs.com/skywang12345/p/3447546.html" target="_blank" rel="noopener">《深入理解Java内存模型》读书总结</a></p><hr><p><a href="http://www.iteye.com/topic/757478" target="_blank" rel="noopener">深入浅出ThreadLocal - Java综合 - Java - ITeye论坛</a></p><p><a href="https://www.jianshu.com/p/98b68c97df9b" target="_blank" rel="noopener">ThreadLocal-面试必问深度解析 - 简书</a></p><h4 id="面试集合"><a href="#面试集合" class="headerlink" title="面试集合:"></a>面试集合:</h4><p><a href="https://www.cnblogs.com/dolphin0520/p/3958019.html" target="_blank" rel="noopener">Java线程面试题 Top 50 （转载）</a></p><p><a href="https://www.cnblogs.com/dolphin0520/p/3932934.html" target="_blank" rel="noopener">JAVA多线程和并发基础面试问答（转载）</a><br><br></p><h2 id="IO-IP-HTTP-TCP"><a href="#IO-IP-HTTP-TCP" class="headerlink" title="IO/IP HTTP TCP:"></a><strong>IO/IP HTTP TCP</strong>:</h2><p><a href="https://juejin.im/post/5b5ef5a25188251af86bfebf" target="_blank" rel="noopener">HTTP2和HTTPS来不来了解一下？ - 掘金</a></p><p><a href="https://blog.csdn.net/anxpp/article/details/51512200" target="_blank" rel="noopener">Java 网络IO编程总结（BIO、NIO、AIO均含完整实例代码） - CSDN博客</a></p><p><a href="https://www.cnblogs.com/red-code/p/8394892.html" target="_blank" rel="noopener">TCP协议详解 - Red_Code - 博客园</a></p><p><a href="https://www.cnblogs.com/ImBit/p/5513401.html" target="_blank" rel="noopener">基础笔记（三）：网络协议之Tcp、Http - 老真 - 博客园</a></p><p><a href="https://blog.csdn.net/baiye_xing/article/details/73123753" target="_blank" rel="noopener">【NIO引入】BIO、AIO与NIO的区别 - CSDN博客</a></p><p><a href="https://www.cnblogs.com/dolphin0520/p/3916526.html" target="_blank" rel="noopener">Java NIO：浅析I/O模型</a></p><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍:"></a><strong>书籍</strong>:</h2><ul><li><a href="http://web.jobbole.com/86734/" target="_blank" rel="noopener">如果有人让你推荐前端技术书，请让他看这个列表 - WEB前端 - 伯乐在线</a></li><li><a href="https://blog.csdn.net/xiaopang1122/article/details/54909636" target="_blank" rel="noopener">JAVA程序员必看的15本书-JAVA自学书籍推荐 （转） - CSDN博客</a></li><li><a href="https://baijiahao.baidu.com/s?id=1600336783016516283&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">干货 ｜ 推荐五本国外最受欢迎的Spring教程书</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;树形结构&quot;&gt;&lt;a href=&quot;#树形结构&quot; class=&quot;headerlink&quot; title=&quot;树形结构:&quot;&gt;&lt;/a&gt;&lt;strong&gt;树形结构&lt;/strong&gt;:&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/skywang1234
      
    
    </summary>
    
      <category term="算法" scheme="https://chankin026.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数据结构" scheme="https://chankin026.github.io/categories/%E7%AE%97%E6%B3%95/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="收藏" scheme="https://chankin026.github.io/tags/%E6%94%B6%E8%97%8F/"/>
    
      <category term="算法" scheme="https://chankin026.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="并发" scheme="https://chankin026.github.io/tags/%E5%B9%B6%E5%8F%91/"/>
    
      <category term="数据结构" scheme="https://chankin026.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://chankin026.github.io/2018/09/28/test/"/>
    <id>https://chankin026.github.io/2018/09/28/test/</id>
    <published>2018-09-27T18:10:39.000Z</published>
    <updated>2018-09-28T09:47:43.752Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解析Tomcat内部结构和请求过程</title>
    <link href="https://chankin026.github.io/2018/09/28/%E8%A7%A3%E6%9E%90Tomcat%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84%E5%92%8C%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B/"/>
    <id>https://chankin026.github.io/2018/09/28/解析Tomcat内部结构和请求过程/</id>
    <published>2018-09-27T16:52:19.000Z</published>
    <updated>2018-09-28T09:45:32.076Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Tomcat" scheme="https://chankin026.github.io/categories/Tomcat/"/>
    
    
      <category term="Tomcat" scheme="https://chankin026.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Typora的简单使用</title>
    <link href="https://chankin026.github.io/2018/09/27/Typora%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://chankin026.github.io/2018/09/27/Typora的简单使用/</id>
    <published>2018-09-27T03:00:00.000Z</published>
    <updated>2018-09-28T10:23:23.894Z</updated>
    
    <content type="html"><![CDATA[<p>Typora是一款超简洁的markdown编辑器，具有如下特点：</p><ol><li><strong>完全免费，目前已支持中文</strong></li><li><strong>跨平台，支持windows,mac,linux</strong></li><li><strong>支持数学公式输入，图片插入</strong></li><li><strong>极其简洁，无多余功能</strong></li><li><strong>界面所见即所得</strong></li></ol><hr><hr><h1 id="区域元素"><a href="#区域元素" class="headerlink" title="区域元素"></a>区域元素</h1><h2 id="YAML-FONT-Matters"><a href="#YAML-FONT-Matters" class="headerlink" title="YAML FONT Matters"></a>YAML FONT Matters</h2><p>在文章最上方输入---，按换行键产生，输入内容即可</p><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><p>输入+换行键，产生标题，自动更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[toc] + 回车键</span><br></pre></td></tr></table></figure><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>按换行键建立新的一行<br>可在行尾插入打断线，禁止向后插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按换行键建立新的一行&lt;br/&gt;</span><br></pre></td></tr></table></figure><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>开头#的个数表示，空格+文字。标题有1~6个级别，#表示开始，按换行键结束</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># H1</span><br><span class="line">## H2</span><br><span class="line">###### H6</span><br></pre></td></tr></table></figure><h2 id="引注"><a href="#引注" class="headerlink" title="引注"></a>引注</h2><p>开头&gt;表示，空格+文字，按换行键换行，双按换行跳出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; ni</span><br><span class="line">&gt;</span><br><span class="line">&gt; ni hao</span><br></pre></td></tr></table></figure><blockquote><p>ni</p><p>nini</p></blockquote><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><p>开头* + -，空格+文字，可以创建无序序列，换行键换行，删除键+shift+tab跳出</p><p>开头1.，空格+后接文字，可以创建有序序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*   Red</span><br><span class="line">+   Green</span><br><span class="line">-   Blue</span><br><span class="line"></span><br><span class="line">1.  Red</span><br><span class="line">2.  Green</span><br><span class="line">3.  Blue</span><br></pre></td></tr></table></figure><ul><li>无序序列</li></ul><ol><li>你</li></ol><h2 id="可选序列"><a href="#可选序列" class="headerlink" title="可选序列"></a>可选序列</h2><p>开头序列+空格+[ ]+空格+文字，换行键换行，删除键+shift+tab跳出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- [ ] a</span><br><span class="line">+ [ ] b</span><br><span class="line">* [ ] c</span><br><span class="line">- [x] completed</span><br></pre></td></tr></table></figure><ul><li>[x] a</li><li>[x] b</li><li>[x] c</li><li>[x] d</li></ul><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">​```java</span><br><span class="line">public class  test&#123;</span><br><span class="line">&#125;```</span><br></pre></td></tr></table></figure><h2 id="数学块"><a href="#数学块" class="headerlink" title="数学块"></a>数学块</h2><p>使用MtathJax建立数学公式</p><p>开头$$+换行键，产生输入区域，  输入Tex/LaTex格式的数学公式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 = \begin&#123;vmatrix&#125;</span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp; \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp; \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 = \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>开头|  列名  |  列名  |   换行键，创建一个2*2表格</p><p>将鼠标放置其上，弹出编辑尺寸，个数，文字等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">|第一列|第二列| 第三列|</span><br><span class="line">|:----|:----:|----:|</span><br><span class="line">|左对齐|居中|右对齐|</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">第一列</th><th style="text-align:center">第二列</th><th style="text-align:right">第三列</th></tr></thead><tbody><tr><td style="text-align:left">左对齐</td><td style="text-align:center">居中</td><td style="text-align:right">右对齐</td></tr></tbody></table><ul><li><p>居左：<code>:----</code></p></li><li><p>居中：<code>:----:</code>或<code>-----</code></p></li><li><p>居右：<code>----:</code></p></li></ul><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">脚注产生的方法[^footnote].</span><br><span class="line">[^footnote]: *这个就是脚注*</span><br></pre></td></tr></table></figure><p>脚注产生的方法<a href="这个就是*脚注*">^1</a></p><h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><p>输入***/—，换行键换行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">---</span><br></pre></td></tr></table></figure><hr><hr><h1 id="特征元素"><a href="#特征元素" class="headerlink" title="特征元素"></a>特征元素</h1><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>单击链接，展开后可编辑</p><p>ctr+单击，打开链接</p><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>用[]括住要超链接的内容，紧接着用()括住超链接源+名字，超链接源后面+超链接命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link.</span><br><span class="line"></span><br><span class="line">[This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>This is <a href="http://example.com/" target="_blank" rel="noopener">an example</a> inline link.</p><p><a href="http://example.net/" target="_blank" rel="noopener">This link</a> has no title attribute.</p><h3 id="内链接"><a href="#内链接" class="headerlink" title="内链接"></a>内链接</h3><h3 id="相关链"><a href="#相关链" class="headerlink" title="相关链"></a>相关链</h3><p>使用 [超链接文字]+[标签]，创建可定义链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br><span class="line"></span><br><span class="line">Then, anywhere in the document, you define your link label like this, on a line by itself:</span><br><span class="line"></span><br><span class="line">[id]: http://example.com/  &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p><a href="http://baidu.com/" target="_blank" rel="noopener">Baidu</a><br>And then define the link:</p><p><a href="http://google.com/" target="_blank" rel="noopener">Google</a><br>And then define the link:</p><h2 id="URLs"><a href="#URLs" class="headerlink" title="URLs"></a>URLs</h2><p>用&lt;&gt;括住url，可手动设置url</p><p>对于标准URLs，可自动识别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;chanjian1261@gmail.com&gt;</span><br><span class="line">www.baidu.com</span><br></pre></td></tr></table></figure><p><a href="mailto:chanjian1261@gmail.com" target="_blank" rel="noopener">chanjian1261@gmail.com</a></p><p><strong><a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a></strong></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a><strong>图片</strong></h2><ol><li>手动添加：类似链接，前面需加！</li><li>用鼠标拖图片进入，然后鼠标放置其上修改</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">V2EX</span>](<span class="link">https://upload.wikimedia.org/wikipedia/commons/e/ed/V2ex.png</span>)</span><br><span class="line">![<span class="string">Github</span>](<span class="link">https://cdn2.iconfinder.com/data/icons/black-white-social-media/64/social_media_logo_github-128.png</span>)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload.wikimedia.org/wikipedia/commons/e/ed/V2ex.png" alt="V2EX" title="">                </div>                <div class="image-caption">V2EX</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn2.iconfinder.com/data/icons/black-white-social-media/64/social_media_logo_github-128.png" alt="Github" title="">                </div>                <div class="image-caption">Github</div>            </figure><h2 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h2><p>以*或__括住</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*single asterisks*</span><br><span class="line"></span><br><span class="line">_single underscores_</span><br></pre></td></tr></table></figure><p><em>single asterisks</em></p><p><em>single underscores</em></p><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h2><p>开头双*或双<em>，结尾双*或双</em>，建议双*</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">**double asterisks**</span><br><span class="line"></span><br><span class="line">__double underscores__</span><br></pre></td></tr></table></figure><p><strong>double asterisks</strong></p><p><strong>double underscores</strong></p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>用两个~开头，两个~结尾</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~Mistaken text.~~</span><br></pre></td></tr></table></figure><p><del>错误文字.</del></p><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>使用HTML标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;Underline&lt;/u&gt;</span><br></pre></td></tr></table></figure><p><u>Underline</u></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>用两个`在正常段落总表示代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Use the `printf()` function.</span><br></pre></td></tr></table></figure><p>Use the <code>printf()</code> function.</p><h2 id="数学式"><a href="#数学式" class="headerlink" title="数学式"></a>数学式</h2><p>需 <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab启动，</p><p>输入$，然后按ESC键，之后输入Tex命令，可预览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\lim_&#123;x\to\infty&#125;\exp(-x)=0$</span><br></pre></td></tr></table></figure><p>$\lim_{x\to\infty}\exp(-x)=0$</p><h2 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">H&lt;sub&gt;2&lt;/sub&gt;O  </span><br><span class="line">CO&lt;sub&gt;2&lt;/sub&gt;</span><br><span class="line">爆米&lt;sup&gt;TM&lt;/sup&gt;</span><br></pre></td></tr></table></figure><p>H<sub>2</sub>O<br>CO<sub>2</sub><br>爆米<sup>TM</sup></p><h2 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h2><p>需 <code>Preference</code> Panel -&gt; <code>Markdown</code> Tab启动，</p><p>使用双==括住内容, 或者利用html 的mark标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">==highlight==</span><br><span class="line">&lt;mark&gt;highlight&lt;/mark&gt;</span><br></pre></td></tr></table></figure><p><mark>highlight</mark></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Typora是一款超简洁的markdown编辑器，具有如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;完全免费，目前已支持中文&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台，支持windows,mac,linux&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;s
      
    
    </summary>
    
      <category term="Markdown" scheme="https://chankin026.github.io/categories/Markdown/"/>
    
      <category term="Typora" scheme="https://chankin026.github.io/categories/Markdown/Typora/"/>
    
    
      <category term="Markdown" scheme="https://chankin026.github.io/tags/Markdown/"/>
    
      <category term="Typora" scheme="https://chankin026.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://chankin026.github.io/2018/09/01/hello-world/"/>
    <id>https://chankin026.github.io/2018/09/01/hello-world/</id>
    <published>2018-08-31T17:00:00.000Z</published>
    <updated>2018-09-28T09:16:30.681Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="Hexo" scheme="https://chankin026.github.io/categories/Hexo/"/>
    
    
      <category term="HTML" scheme="https://chankin026.github.io/tags/HTML/"/>
    
  </entry>
  
</feed>
